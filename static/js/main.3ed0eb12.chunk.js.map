{"version":3,"sources":["components/LogoutButton.js","components/AppBar.js","components/CompleteButton.js","pages/Home.js","pages/Login.js","pages/Signup.js","components/App.js","serviceWorker.js","components/ui/Theme.js","index.js"],"names":["useStyles","makeStyles","theme","button","color","secondary","logoutLink","textDecoration","LogoutButton","classes","useHistory","to","className","Button","variant","onClick","localStorage","clear","window","location","reload","grow","flexGrow","toolbar","justifyContent","appName","palette","primary","main","fontFamily","marginLeft","width","AppBar","props","position","Toolbar","Grid","container","item","IconButton","edge","menuButton","aria-label","Typography","title","noWrap","alignItems","spacing","aria-haspopup","userName","borderRadius","height","fontSize","fontWeight","filter","border","CompleteButton","today","Date","date","getMonth","getDate","getFullYear","todayDate","fetch","method","headers","Accept","Authorization","jwt","body","JSON","stringify","action_amount","user_id","id","logged_time","then","res","json","data","console","log","error","setUserDailyTotal","userDailyTotal","buttonContainer","marginTop","textAlign","dailyTotal","marginBottom","grandTotalBox","display","padding","grandTotalTitle","grandTotalWrapper","dailyTotalHeading","Home","useState","userTotal","setUserTotal","setUserName","user","username","direction","justify","md","Box","formInputs__submit","signupContainer","signup_button","textDecorationNone","headerTitle","wrapper","paddingTop","Login","setUsername","password","setPassword","Container","maxWidth","onSubmit","e","preventDefault","TextField","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","target","value","type","size","align","Signup","firstName","setFirstName","lastName","setLastName","passwordConfirmation","setPasswordConfirmation","first_name","last_name","password_confirmation","App","userIsAuthorized","setUserIsAuthorized","exact","path","Boolean","hostname","match","createMuiTheme","light","dark","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3ed0eb12.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\n\n// To create the styles object\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI imports\nimport { Button } from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: theme.secondary,\n  },\n  logoutLink: {\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function LogoutButton() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Link to=\"/\" className={classes.logoutLink}>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        className={classes.button}\n        onClick={() => {\n          localStorage.clear();\n\n          window.location.reload();\n        }}\n      >\n        Logout\n      </Button>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport LogoutButton from \"./LogoutButton\";\n\n// Material UI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Appbar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { getThemeProps } from \"@material-ui/styles\";\n\n// Styles object\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n  },\n  appName: {\n    color: theme.palette.primary.main,\n    fontFamily: \"Rowdies\",\n    marginLeft: \"5%\",\n    width: \"100%\",\n  },\n}));\n\nexport default function AppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <Appbar position=\"static\" color=\"white\">\n        <Toolbar className={classes.toolbar}>\n          <div>\n            <Grid container>\n              <Grid item>\n                <IconButton\n                  edge=\"start\"\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.title}\n                  variant=\"h4\"\n                  noWrap\n                  className={classes.appName}\n                >\n                  GM\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div>\n            <Grid container alignItems=\"center\" spacing={3}>\n              <Grid item>\n                <LogoutButton />\n              </Grid>\n              <Grid item>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  // aria-controls={menuId}\n                  aria-haspopup=\"true\"\n                  // onClick={handleProfileMenuOpen}\n                  //   color=\"primary\"\n                >\n                  <MailIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  // aria-controls={menuId}\n                  aria-haspopup=\"true\"\n                  // onClick={handleProfileMenuOpen}\n                  //   color=\"primary\"\n                >\n                  <NotificationsIcon />\n                </IconButton>\n              </Grid>\n\n              <Grid item>\n                <Grid container alignItems=\"center\">\n                  <Grid item>\n                    <Typography variant=\"h6\" className={classes.userName}>\n                      {props.userName}\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"account of current user\"\n                      // aria-controls={menuId}\n                      aria-haspopup=\"true\"\n                      // onClick={handleProfileMenuOpen}\n                      color=\"primary\"\n                    >\n                      <AccountCircle />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Toolbar>\n      </Appbar>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Material ui imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { getThemeProps } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"white\",\n    borderRadius: \"50%\",\n    width: \"400px\",\n    height: \"400px\",\n    fontSize: \"40px\",\n    fontFamily: \"Roboto\",\n    fontWeight: \"bold\",\n    filter: \"drop-shadow(3px 7px 8px #7e7e7e)\",\n    border: \"15px solid #00a015\",\n    \"&:hover\": {\n      border: \"10px solid #599634\",\n    },\n  },\n}));\n\nexport default function CompleteButton(props) {\n  const classes = useStyles();\n\n  // CREATES A STAT FOR CURRENT USER\n  const handleClick = () => {\n    let today = new Date();\n    let date =\n      today.getMonth() + 1 + \"-\" + today.getDate() + \"-\" + today.getFullYear();\n    let todayDate = date;\n\n    if (date[1] === \"-\") {\n      todayDate = \"0\" + date;\n    }\n    fetch(\"https://nameless-eyrie-15847.herokuapp.com/stats\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.jwt}`,\n      },\n      body: JSON.stringify({\n        action_amount: 1,\n        user_id: localStorage.id,\n        logged_time: todayDate,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(todayDate);\n        if (!data.error) {\n          props.setUserDailyTotal(props.userDailyTotal + 1);\n        }\n      });\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      className={classes.button}\n      onClick={handleClick}\n    >\n      COMPLETE!\n    </Button>\n  );\n}\n","import React, { useState } from \"react\";\nimport AppBar from \"../components/AppBar\";\nimport CompleteButton from \"../components/CompleteButton\";\n\n// To create the styles object\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI imports\nimport { Grid, Typography, Box, Container } from \"@material-ui/core/\";\n\n// Router\nimport { Redirect } from \"react-router-dom\";\n\n// Styles Object\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    marginTop: \"5rem\",\n    textAlign: \"center\",\n  },\n  dailyTotal: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: \"60px\",\n    color: \"#00D01B\",\n    marginBottom: \"3.5rem\",\n  },\n  grandTotalBox: {\n    display: \"inline-block\",\n    border: \"1px solid #676767\",\n    padding: \"1rem\",\n    marginTop: \"1rem\",\n    width: \"10rem\",\n    fontSize: \"1.5rem\",\n    color: \"#5f5b5b\",\n  },\n  grandTotalTitle: {\n    fontWeight: \"bold\",\n    color: \"#676767\",\n  },\n  grandTotalWrapper: {\n    textAlign: \"center\",\n    marginTop: \"3rem\",\n  },\n  dailyTotalHeading: {\n    fontWeight: \"bold\",\n    marginBottom: \"1.5rem\",\n  },\n}));\n\nexport default function Home() {\n  // Variable to enable ease of use of stlyes object\n  const classes = useStyles();\n  const [userTotal, setUserTotal] = useState(0);\n  const [userDailyTotal, setUserDailyTotal] = useState(0);\n  const [userName, setUserName] = useState(\"\");\n\n  fetch(\"https://nameless-eyrie-15847.herokuapp.com/profile\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.jwt}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((user) => {\n      if (!user.error) {\n        setUserName(user.username);\n      }\n    });\n\n  fetch(\"https://nameless-eyrie-15847.herokuapp.com/usertotal/:id\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.jwt}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      setUserTotal(data);\n    });\n\n  fetch(\"https://nameless-eyrie-15847.herokuapp.com/userdailytotal/:id\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.jwt}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      setUserDailyTotal(data);\n    });\n\n  if (!userName) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <AppBar userName={userName} />\n      <Grid item md={12} justify=\"center\" className={classes.grandTotalWrapper}>\n        <Typography variant=\"h5\" className={classes.grandTotalTitle}>\n          GRAND TOTAL:\n        </Typography>\n        <Box className={classes.grandTotalBox}>\n          <span>{\"$\" + userTotal}</span>\n        </Box>\n      </Grid>\n      <Grid item md={12} className={classes.buttonContainer}>\n        <Typography variant=\"h3\" className={classes.dailyTotalHeading}>\n          DAILY EARNINGS:\n        </Typography>\n\n        <Typography variant=\"h4\" className={classes.dailyTotal}>\n          {\"$\" + userDailyTotal}\n        </Typography>\n\n        <CompleteButton\n          setUserDailyTotal={setUserDailyTotal}\n          userDailyTotal={userDailyTotal}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport AppBar from \"../components/AppBar\";\nimport CompleteButton from \"../components/CompleteButton\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n// To create the styles object\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI imports\nimport {\n  Grid,\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  FormControl,\n} from \"@material-ui/core\";\n\n// Styles Object\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    marginTop: \"5%\",\n    textAlign: \"center\",\n  },\n  dailyTotal: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: \"60px\",\n  },\n  grandTotalBox: {\n    textAlign: \"right\",\n    display: \"inline-block\",\n  },\n  formInputs__submit: {\n    marginTop: \"1rem\",\n    color: \"#fff\",\n    marginTop: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  signupContainer: {\n    marginTop: \"2rem\",\n  },\n  signup_button: {\n    textAlign: \"center\",\n    marginTop: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  textDecorationNone: {\n    textDecoration: \"none\",\n  },\n  headerTitle: {\n    marginBottom: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  wrapper: {\n    paddingTop: \"3rem\",\n  },\n}));\n\nexport default function Login() {\n  // Variable to enable ease of use of stlyes object\n  const classes = useStyles();\n  let history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"https://nameless-eyrie-15847.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.jwt) {\n          localStorage.jwt = data.jwt;\n          localStorage.username = data.user.username;\n          localStorage.id = data.user.id;\n          // PUSH TO THE HOME ROUTE\n\n          window.location.reload();\n        }\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.wrapper}>\n      <Typography variant=\"h3\" className={classes.headerTitle}>\n        LOGIN:\n      </Typography>\n      <Box className=\"formInputs\">\n        <form onSubmit={handleSubmit}>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Username:\"\n            style={{ margin: 8 }}\n            placeholder=\"Username\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Password:\"\n            style={{ margin: 8 }}\n            type=\"password\"\n            placeholder=\"Password\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.formInputs__submit}\n            size=\"large\"\n            type=\"submit\"\n          >\n            SUBMIT\n          </Button>\n        </form>\n      </Box>\n\n      <Box className={classes.signupContainer}>\n        <Typography variant=\"p\" align=\"center\" display=\"block\">\n          New to GoodMoney? Signup Below!\n        </Typography>\n        <Box className={classes.signup_button}>\n          <Link to=\"/signup\" className={classes.textDecorationNone}>\n            <Button variant=\"outlined\" color=\"secondary\" size=\"large\">\n              SIGN UP\n            </Button>\n          </Link>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n// To create the styles object\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI imports\nimport {\n  Grid,\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Box,\n} from \"@material-ui/core\";\n\n// Styles Object\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    marginTop: \"5%\",\n    textAlign: \"center\",\n  },\n  dailyTotal: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: \"60px\",\n  },\n  grandTotalBox: {\n    textAlign: \"right\",\n    display: \"inline-block\",\n  },\n  formInputs__submit: {\n    marginTop: \"1rem\",\n    color: \"#fff\",\n    marginTop: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  signupContainer: {\n    marginTop: \"2rem\",\n  },\n  signup_button: {\n    textAlign: \"center\",\n    marginTop: \"1rem\",\n    fontWeight: \"bold\",\n  },\n  textDecorationNone: {\n    textDecoration: \"none\",\n  },\n  headerTitle: {\n    marginBottom: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  wrapper: {\n    paddingTop: \"3rem\",\n  },\n}));\n\nexport default function Signup() {\n  // Variable to enable ease of use of stlyes object\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(\"https://nameless-eyrie-15847.herokuapp.com/signup\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        first_name: firstName,\n        last_name: lastName,\n        username: username,\n        password: password,\n        password_confirmation: passwordConfirmation,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.jwt) {\n          console.log(data);\n          localStorage.jwt = data.jwt;\n          localStorage.username = data.user.username;\n          localStorage.id = data.user.id;\n          // PUSH TO THE HOME ROUTE\n          window.location.reload();\n        }\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.wrapper}>\n      <Typography variant=\"h3\" className={classes.headerTitle}>\n        SIGN UP:\n      </Typography>\n      <Box className=\"formInputs\">\n        <form onSubmit={handleSubmit}>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"First Name:\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter First Name\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setFirstName(e.target.value);\n            }}\n          />\n\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Last Name:\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter Last Name\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setLastName(e.target.value);\n            }}\n          />\n\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Username:\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter Username\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Password:\"\n            type=\"password\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter Password\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Password Confirmation:\"\n            type=\"password\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter Password Confirmation\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              setPasswordConfirmation(e.target.value);\n            }}\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.formInputs__submit}\n            size=\"large\"\n            type=\"submit\"\n          >\n            SUBMIT\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport {\n  BrowserRouter as Redirect,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nexport default function App() {\n  const [userIsAuthorized, setUserIsAuthorized] = useState(false);\n\n  fetch(\"https://nameless-eyrie-15847.herokuapp.com/profile\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.jwt}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((user) => {\n      if (!user.error) {\n        setUserIsAuthorized(true);\n      }\n    });\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {userIsAuthorized ? <Home /> : <Login />}\n      </Route>\n      <Route path=\"/signup\">{userIsAuthorized ? <Home /> : <Signup />}</Route>\n    </Switch>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#b0bb65\",\n      main: \"#85bb65\",\n      dark: \"#5ea137\",\n    },\n    secondary: {\n      main: \"#00D01B\",\n    },\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport theme from \"./components/ui/Theme\";\n\n// Material UI's theme provider to add the theme throughout entire application\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}